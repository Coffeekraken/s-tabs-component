/**
 * @name    STabsComponent
 * Create nice and customizable tabs
 *
 * @example   html
 * <ul class="tabs">
 *   <li class="tabs__item">
 *     <a href="#tab1" class="active" is="s-activate" group="tabs">
 *        Tab #1
 *     </a>
 *   </li>
 *   <li class="tabs__item">
 *     <a href="#tab2" is="s-activate" group="tabs">
 *       Tab #2
 *     </a>
 *   </li>
 *   <li class="tabs__item">
 *     <a href="#tab3" is="s-activate" group="tabs">
 *       Tab #3
 *     </a>
 *   </li>
 *   <li class="tabs__item">
 *     <a href="#tab4" is="s-activate" group="tabs">
 *       Tab #4
 *     </a>
 *   </li>
 * </ul>
 * <div class="tabs__content tf vr" id="tab1">
 *   <h3>Hello World #1</h3>
 * </div>
 * <div class="tabs__content tf vr" id="tab2">
 *   <h3>Hello World #2</h3>
 * </div>
 * <div class="tabs__content tf vr" id="tab3">
 *   <h3>Hello World #3</h3>
 * </div>
 * <div class="tabs__content tf vr" id="tab4">
 *   <h3>Hello World #4</h3>
 * </div>
 *
 * @author    Olivier Bossel <olivier.bossel@gmail.com>
 */

/**
 * Print out the bare and style component css
 * @param 	{List<Color>} 		[$color=default] 		The color to generate
 */
 @mixin s-tabs(
  $color: default
) {
  @include s-tabs-bare();
  @include s-tabs-style($color);
}

/**
 * Print out the bare tabs css
 */
@mixin s-tabs-bare() {
  @include s-component('tabs') {

  }
}

/**
 * Print out the style tabs css
 * @param 	{Color} 		[$color=default] 		The color to generate
 */
@mixin s-tabs-style(
  $color: default
) {
  @include s-component('tabs') {
    border-bottom: 1px solid s-color($color, -opacity .3);
  }
}

/**
 * Print out the bare item and style component css
 * @param 	{List<Color>} 		[$color=default] 		The color to generate
 */
@mixin s-tabs-item(
  $color: default
) {
  @include s-tabs-item-bare();
  @include s-tabs-item-style($color);
}

/**
 * Print out the bare tabs item css
 */
@mixin s-tabs-item-bare() {
  @include s-component('tabs') {
    display: inline-block;
    position: relative;
    top: 1px;
    z-index: 1;

    a {
      border-top-left-radius: s-lnf(border-radius);
      border-top-right-radius: s-lnf(border-radius);
      display: inline-block;
      padding: s-lnf(padding-horizontal) s-lnf(padding-vertical);
      text-decoration: none;
    }
  }
}

/**
 * Print out the style tabs item css
 * @param 	{Color} 		[$color=default] 		The color to generate
 */
 @mixin s-tabs-item-style(
  $color: default
) {
  @include s-component('tabs') {
    a {
      color: s-color($color);
      border: 1px solid rgba(0,0,0,0);
      border-bottom: none !important;
      @include s-transition(fast);

      &:hover,
      &.active {
        $lighten : 95 - lightness(s-color($color));
        border: 1px solid s-color($color, -opacity .3);
        background-color: s-color($color, -lighten $lighten);
      }
    }
  }
}

/**
 * Print out the bare content and style component css
 * @param 	{List<Color>} 		[$color=default] 		The color to generate
 */
@mixin s-tabs-content(
  $color: default
) {
  @include s-tabs-content-bare();
  @include s-tabs-content-style($color);
}

/**
 * Print out the bare tabs content css
 */
@mixin s-tabs-content-bare() {
  @include s-component('tabs') {
    padding: s-space(default);
    display: none;
    border-bottom-left-radius: s-lnf(border-radius);
    border-bottom-right-radius: s-lnf(border-radius);

    &.active {
      display: block;
    }
  }
}

/**
 * Print out the style tabs content css
 * @param 	{Color} 		[$color=default] 		The color to generate
 */
@mixin s-tabs-content-style(
  $color: default
) {
  @include s-component('tabs') {
    border: solid 1px s-color($color, -opacity .3);
    border-top: none !important;
  }
}
