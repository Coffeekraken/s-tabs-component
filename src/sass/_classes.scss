/**
 * @name    STabsComponent
 * Create nice and customizable tabs
 *
 * @example   html
 * <div class="tabs">
 *   <ul class="tabs__menu">
 *     <li class="tabs__menu-item">
 *       <a href="#tab1" class="active" is="s-activate" group="tabs">
 *          Tab #1
 *       </a>
 *     </li>
 *     <li class="tabs__menu-item">
 *       <a href="#tab2" is="s-activate" group="tabs">
 *         Tab #2
 *       </a>
 *     </li>
 *     <li class="tabs__menu-item">
 *       <a href="#tab3" is="s-activate" group="tabs">
 *         Tab #3
 *       </a>
 *     </li>
 *     <li class="tabs__menu-item">
 *       <a href="#tab4" is="s-activate" group="tabs">
 *         Tab #4
 *       </a>
 *     </li>
 *   </ul>
 *   <div class="tabs__content tf vr" id="tab1">
 *     <h3>Hello World #1</h3>
 *   </div>
 *   <div class="tabs__content tf vr" id="tab2">
 *     <h3>Hello World #2</h3>
 *   </div>
 *   <div class="tabs__content tf vr" id="tab3">
 *     <h3>Hello World #3</h3>
 *   </div>
 *   <div class="tabs__content tf vr" id="tab4">
 *     <h3>Hello World #4</h3>
 *   </div>
 * </div>
 *
 * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */

/**
 * Print out the bare and style component css
 * @param 	{List<Color>} 		[$color=default primary secondary] 		The colors to generate
 */
@mixin s-tabs-classes(
  $colors: default primary secondary
) {
  @include s-tabs-classes-bare();
  @include s-tabs-classes-style($colors);
}

/**
 * Print out the bare component css
 */
@mixin s-tabs-classes-bare() {
  @include s-component('tabs') {

    .#{s-component()}__menu {
    }

    .#{s-component()}__menu-item {
      display: inline-block;
      position: relative;
      top: 1px;
      z-index: 1;

      a {
        border-top-left-radius: s-lnf(border-radius);
        border-top-right-radius: s-lnf(border-radius);
        display: inline-block;
        padding: s-lnf(padding-horizontal) s-lnf(padding-vertical);
        text-decoration: none;
      }
    }

    .#{s-component()}__content {
      padding: s-space(default);
      display: none;
      border-bottom-left-radius: s-lnf(border-radius);
      border-bottom-right-radius: s-lnf(border-radius);

      &.active {
        display: block;
      }
    }

    .#{s-component()}--filled {
      .#{s-component()}__content {
      }
    }

    .#{s-component()}--opaque {
      .#{s-component()}__menu-item {
      }
      .#{s-component()}__content {
      }
    }
  }
}

/**
 * Print out the style component css
 * @param 	{List<Color>} 		[$color=default primary secondary] 		The colors to generate
 */
@mixin s-tabs-classes-style(
  $colors: default primary secondary
) {
  @include s-component('tabs') {
    @each $color in $colors {
      $sel : ".#{s-component()}--#{$color}";

      @if $color == default {
        $sel : ".#{s-component()}";
      }

      #{$sel} {

        .#{s-component()}__menu {
          border-bottom: 1px solid s-color($color, -lightness 90);
        }

        .#{s-component()}__menu-item {
          a {
            color: s-color($color);
            border: 1px solid rgba(0,0,0,0);
            border-bottom: none !important;
            @include s-transition(fast);

            &:hover,
            &.active {
              border: 1px solid s-color($color, -lightness 90);
              background-color: s-color($color, -lightness 95);
            }
            &:active {
              background-color: s-color($color, -lightness 90);
            }
          }
        }

        .#{s-component()}__content {
          .#{s-component()}--filled & {
            background-color: s-color($color, -lightness 95);
          }

          border: solid 1px s-color($color, -opacity .1);
          border-top: none !important;
        }

        &.#{s-component()}--filled {
          .#{s-component()}__content {
            background-color: s-color($color, -lightness 95);
            border: solid 1px s-color($color, -lightness 90);
          }
        }

        &.#{s-component()}--opaque {
          .#{s-component()}__menu-item {
            a {
              color: s-color($color);
              border: 1px solid rgba(0,0,0,0);
              border-bottom: none !important;
              @include s-transition(fast);

              &:hover,
              &.active {
                color: white;
                border: 1px solid s-color($color);
                background-color: s-color($color);
              }
              &:active {
                background-color: s-color($color, -darken 5%);
              }
            }
          }
        }

        &.#{s-component()}--opaque.#{s-component()}--filled {

          .#{s-component()}__content {
            background-color: s-color($color);
            border: solid 1px s-color($color);
            color: white;
          }
        }
      }
    }
  }
}
